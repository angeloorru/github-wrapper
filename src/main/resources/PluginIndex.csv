app_description,app_type,repo,location,pip_name,app_name,icons,rating_stars,requirements,how_to_install,easy_to_install,works_well,error_thrown,comments
Easy install wagtail blog,blog,https://github.com/thelabnyc/wagtail_blog.git,https://github.com/thelabnyc/wagtail_blog,wagtail-blog,blog,no,129,no external requirements,"pip install wagtail-blog, Add blog to INSTALLED_APPS, Add url(r'^blog/', include('blog.urls', namespace=""blog"")), to urls.py, python manage.py migrate, Override templates as needed.",yes,"yes, just not sure on editing html templates as the content is literally just html when you add new page (using blog template).",none,disqus is a work in progress
Easy install wagtail blog with base theme that looks very nice,blog,https://github.com/APSL/puput.git,https://github.com/APSL/puput,puput,puput,"
https://camo.githubusercontent.com/d83104f6fd46d74da6e3ef3336f68a88421d8a6d/687474703a2f2f692e696d6775722e636f6d2f334279475162362e706e67",200,no external requirements,http://puput.readthedocs.io/en/latest/setup.html#installation-on-top-of-wagtail,yes,"yes, template looks good.",none,"Not sure how to edit the html templates once it is pip installed. Had the same issue with the one above. However, to do this, it is quite a manual process for the person installing plugin."
A lightweight Wagtail plugin to determine the reading level of of text input into a rich text field.,readability,https://github.com/vixdigital/wagtail-readinglevel.git,https://github.com/vixdigital/wagtail-readinglevel,wagtail-readinglevel,wagtailreadinglevel,not yet,0,none,"pip install wagtail-readinglevel, adjust apps list with 'wagtailreadinglevel'",yes,yes,none,"awesome install process, easiest so far"
The Wagtail arm of the law - enforce security protocols on your Wagtail site,security,https://github.com/springload/wagtailenforcer.git,https://github.com/springload/wagtailenforcer,wagtailenforcer,"axes', 'password_policies', 'wagtailenforcer',",no,23,none,https://github.com/springload/wagtailenforcer#quickstart,should be but no,no,,"cant get it to work after doing all the steps in the install list. The idea behind it sounds good though - to lock a visitor out after too many login attempts, min/max characters and restrictions for upload formats suuch as allowing only pdf uploads"
A tool to assist with finding broken links on your Wagtail site.,testing,https://github.com/takeflight/wagtail-linkchecker.git,https://github.com/takeflight/wagtail-linkchecker,wagtail-linkchecker,wagtaillikchecker,no,16,none,should just be pip install and add app name to APP_LIST,no,no,AttributeError: 'Settings' object has no attribute 'DEFAULT_PER_PAGE',doesn't work when tried to install on local copy. Cat also tried just to make sure it wasnt just my machine but it didnt work on cat's either.
Accessibility - This looks pretty cool. Screen cast here... https://www.youtube.com/watch?v=QrgTrE0ug60 ,accessibilty,https://github.com/takeflight/wagtail-accessibility.git,https://github.com/takeflight/wagtail-accessibility,wagtail-accessibility,wagtailaccessibility,no,13,none,"pip install wagtail-accessibility, add wagtailaccessibility to INSTALLED_APPS and then add {% load wagtailaccessibility_tags %} and {% tota11y %} to your templates. Should then work when looking at a page preview.","Should be, but doesnt work at the minute. Currently doesnt work. It's been produced by 'takeflight'. Looks as though the wagtail version isnt working with the app now. ",no,,
A wagtail character and word counting plugin for RichTextFields.,accessibilty,https://github.com/takeflight/wagtail-charcount.git,https://github.com/takeflight/wagtail-charcount,wagtail-charcount,wagtailcharcount,no,3,none,"pip install wagtail-charcount, add wagtailcharcount to INSTALLED_APPS",yes,"yes and no, click here to see image of it working and the downfalls. I tried installing this on a seperate copy of Wagtail that had Chris's little tool (reading level) and it didnt work. I assume that both apps are using the same fields. Click here to see this app in action and how it's current flaws.",none,"Works okay, but definitely could be improved. I also think it clashes with Chris's tool as it looks to use the same fields to output the character count."
"This module provides a simple dashboard of Google Analytics data, integrated into the Wagtail admin UI. Tested on Wagtail 1.4+.",analytics,https://github.com/tomdyson/wagalytics.git,https://github.com/tomdyson/wagalytics,wagalytics,"wagalytics, wagtailfontawesome",no,61,"analytics account, need to create a service account within that account and give it read only access, need to get the view ID from analytics (under admin > view setting > view id), download JSON key file which is produced from the google api console.","pip install wagalytics, add 'wagalytics' and 'wagtailfontawesome' to INSTALLED APPS, place your JSON file in folder (we went with 'wagins/static/analytics/token/file.json', then add file path and Analytics view ID to your base.py file.",yes (ish),"yes, shows data for last 30 days, popular content and top referers",none,Works well. The styling could be better but that is on the repo for improvements.
A Wagtail module for managing video and audio files within the admin,video/audio file manager,https://github.com/torchbox/wagtailmedia.git,https://github.com/torchbox/wagtailmedia,wagtailmedia,wagtailmedia,no,23,none,"pip install wagtailmedia, add wagtailmedia to INSTALLED APPS, add 'from django.conf import settings' and 'from django.conf.urls.static import static' to the top of the urls.py file. Then add '+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)' to the end of the url patterns [ #url stuff here ] 'paste it here'
","seems okay, seperates your audio and video files",yes,none,"The docs show how you can edit the media model. Note(for the static part): Note that this only works in development mode (DEBUG = True); in production, you will need to configure your web server to serve files from MEDIA_ROOT. For further details, see the Django documentation: Serving files uploaded by a user during development and Deploying static files."
A module for Wagtail which provides the ability to build polls and surveys.,surveys,https://github.com/torchbox/wagtailsurveys.git,https://github.com/torchbox/wagtailsurveys,wagtailsurveys,wagtailsurveys,no,16,none,"pip install wagtailsurveys, add wagtailsurverys to INSTALLED APPS. ","should be, but doesnt work at the minute. Currently doesnt work. It's been produced by 'takeflight'. Looks as though the wagtail version isnt working with the app now. ",no,Threw quite a few errors due to the pip installing lower versin of django.,The pip installed django v 1.9.13 over the later version of 1.11.4 therefore it broke the site. Had to pip install the requirements.txt file again. Site now works again.
A/B Testing right in Wagtail.,a/b testing,https://github.com/torchbox/wagtail-experiments.git,https://github.com/torchbox/wagtail-experiments,wagtail-experiments,"wagtail.contrib.modeladmin', 'experiments',",https://github.com/torchbox/wagtail-experiments/blob/master/wagtail-experiments.png,30,none,"pip install wagtail-experiments, add wagtail.contrib.modeladmin & experiments to INSTALLED APPS.",yes,yes,none,"This is a pretty cool app. Can see its benefits for any site, espcailly an eCommerce site. You can name an 'experiment' and choose between two pages and then a goal page. It classes the click from the test pages to the goal page as the conversion. Really like it."